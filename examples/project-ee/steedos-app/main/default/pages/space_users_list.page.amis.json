{
    "type": "page",
    "body": [
        {
            "type": "service",
            "id": "u:8f81c7f0e521",
            "data": {},
            "messages": {},
            "className": "h-full",
            "body": [
                {
                    "type": "steedos-object-listview",
                    "objectApiName": "${objectName}",
                    "className": "h-full bg-white",
                    "id": "u:d29cef0d1007",
                    "columnsTogglable": false,
                    "showHeader": true,
                    "sideSchema": {
                        "type": "input-tree",
                        "className": "",
                        "id": "u:7fd77b7915b0",
                        "source": {
                            "method": "post",
                            "url": "${context.rootUrl}/graphql",
                            "headers": {
                                "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                            },
                            "adaptor": "        const data = payload.data;\n        data.options = data.options.map(function (optionItem) {\n            delete optionItem.children;\n            optionItem.children = optionItem.children__expand.map(function (item) {\n                item.defer = !!(item.children && item.children.length);\n                delete optionItem.children;\n                return item;\n            })\n            return optionItem;\n        });\n        var defaultValueOptions = data.defaultValueOptions;\n        // 字段值下拉选项合并到options中\n        data.options = _.unionWith(data.options, defaultValueOptions, function(a,b){\n            return a[\"value\"]=== b[\"value\"];\n        });\n        delete data.defaultValueOptions;\n        payload.data = data;\n        return payload;\n    ",
                            "requestAdaptor": "       var filters = [['parent', '=', null]];\n        api.data.query = api.data.query.replace(/{__filters}/g, JSON.stringify(filters));\n        var defaultValue = api.data.$value;\n        var optionsFiltersOp = \"in\";\n        var optionsFilters = [[\"_id\", optionsFiltersOp, []]];\n        if (defaultValue) { \n            optionsFilters = [[\"_id\", optionsFiltersOp, defaultValue]];\n        }\n        api.data.query = api.data.query.replace(/{__options_filters}/g, JSON.stringify(optionsFilters));\n        return api;\n    ",
                            "data": {
                                "orderBy": "${orderBy}",
                                "orderDir": "${orderDir}",
                                "pageNo": "${page}",
                                "pageSize": "${perPage}",
                                "query": "{options:organizations(filters:{__filters}){_id value:_id label:fullname children children__expand{label:fullname,value:_id,children}},defaultValueOptions:organizations(filters:{__options_filters}){_id value:_id label:fullname}}",
                                "$value": "$organizations",
                                "options": "${options}"
                            },
                            "messages": {}
                        },
                        "onEvent": {
                            "change": {
                                "actions": [
                                    {
                                        "actionType": "setValue",
                                        "componentId": "u:8f81c7f0e521",
                                        "args": {
                                            "value": {
                                                "additionalFilters": [
                                                    "organizations_parents",
                                                    "in",
                                                    "${event.data.value.value | asArray}"
                                                ],
                                                "organizations": "${event.data.value.value}"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "label": "",
                        "name": "organizations",
                        "multiple": false,
                        "deferApi": {
                            "url": "${context.rootUrl}/graphql?dep=${value}",
                            "method": "post",
                            "headers": {
                                "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                            },
                            "requestAdaptor": "\n        var dep = api.query.dep;\n        var term = api.query.term;\n        var filters;\n        var objectName;\n        var fields;\n        var sort = \"\";\n        if (dep) {\n            objectName = \"organizations\";\n            fields = \"_id,value:_id,label:fullname,children\";\n            filters = [['parent', '=', dep]];\n            sort = \"sort_no desc\";\n        }\n        api.data.query = api.data.query.replace(/{__object_name}/g, objectName).replace(/{__fields}/g, fields).replace(/{__filters}/g, JSON.stringify(filters)).replace('{__sort}', sort.trim());\n        return api;\n    ",
                            "adaptor": "\n        if (api.query.dep) {\n            // 展开组织时才需要根据children值设置defer属性\n            const data = payload.data;\n            data.options = data.options.map(function (option) {\n                option.defer = !!(option.children && option.children.length);\n                delete option.children;\n                return option;\n            });\n            payload.data = data;\n        }\n        return payload;\n    ",
                            "data": {
                                "orderBy": "${orderBy}",
                                "orderDir": "${orderDir}",
                                "pageNo": "${page}",
                                "pageSize": "${perPage}",
                                "query": "{options:{__object_name}(filters: {__filters}, sort: \"{__sort}\"){{__fields}}}"
                            }
                        },
                        "joinValues": false,
                        "clearValueOnHidden": false,
                        "fieldName": "organizations",
                        "hideRoot": true,
                        "initiallyOpen": false,
                        "extractValue": true,
                        "onlyChildren": true,
                        "treeContainerClassName": "no-border",
                        "showIcon": false,
                        "enableNodePath": false,
                        "autoCheckChildren": false,
                        "searchable": true,
                        "searchConfig": {
                            "sticky": true
                        },
                        "unfoldedLevel": 2
                    },
                    "showDisplayAs": true,
                    "data": {
                        "options": "${options}"
                    }
                }
            ]
        }
    ],
    "regions": [
        "body"
    ],
    "data": {
        "context": {
            "rootUrl": "http://127.0.0.1:5000"
        }
    },
    "id": "u:b7167e2fcaf0",
    "name": "page_space_users_list",
    "bodyClassName": "p-0",
    "asideResizor": false,
    "pullRefresh": {
        "disabled": true
    },
    "className": "h-full"
}