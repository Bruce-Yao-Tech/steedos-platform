name: object_triggers
icon: apex
label: Object Triggers
fields:
  name:
    type: text
    label: Name
    searchable: true
    index: true
    required: true
  listenTo:
    label: Object
    type: master_detail
    reference_to: objects
    reference_to_field: name
    required: true
  when:
    label: Execution Time Option
    type: lookup
    required: true
    multiple: true
    is_wide: true
    optionsFunction: !<tag:yaml.org,2002:js/function> |-
      function () {
              return [{
                label: "新增记录之前",
                value: "beforeInsert",
                icon: "asset_relationship"
              }, {
                label: "新增记录之后",
                value: "afterInsert",
                icon: "asset_relationship"
              }, {
                label: "修改记录之前",
                value: "beforeUpdate",
                icon: "asset_relationship"
              }, {
                label: "修改记录之后",
                value: "afterUpdate",
                icon: "asset_relationship"
              }, {
                label: "删除记录之前",
                value: "beforeDelete",
                icon: "asset_relationship"
              }, {
                label: "删除记录之后",
                value: "afterDelete",
                icon: "asset_relationship"
              }, {
                label: "查下记录之前",
                value: "beforeFind",
                icon: "asset_relationship"
              }];
            }
  is_enable:
    label: Enable
    type: boolean
  handler:
    label: Handler
    type: code
    language: javascript
    is_wide: true
    required: true
    defaultValue: |-
      const {isInsert, isUpdate, isDelete, isFind, isBefore, isAfter} = ctx.params;
      const {objectName, query, data, id, doc, previousDoc, userId, spaceId} = ctx.params;
    amis:
      editorDidMount: |-
        monaco.languages.registerCompletionItemProvider('javascript', {
          provideCompletionItems: (model, position) => {
            const intellisense = {
              "myCustomIntelliSense": {
                "prefix": "myCodeSnippet",
                "body": [
                  "console.log('Hello World!');"
                ],
                "description": "My custom IntelliSense for logging 'Hello World!' to the console"
              }
            }
            const suggestions = Object.keys(intellisense).map(key => {
              const item = intellisense[key];
              return {
                label: item.prefix,
                documentation: item.description,
                kind: monaco.languages.CompletionItemKind.Snippet,
                insertText: new monaco.SnippetString(item.body.join('\n'))
              };
            });
            return { suggestions };
          }
        });
paging:
  enabled: false
list_views:
  all:
    columns:
      - name
      # - label
      - object
      # - 'on'
      - when
      - is_enable
    label: All
    filter_scope: space
permission_set:
  user:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: false
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true