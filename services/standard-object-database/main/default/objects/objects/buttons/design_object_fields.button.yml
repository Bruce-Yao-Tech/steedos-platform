name: design_object_fields
amis_schema: |-
  {
      "type": "service",
      "body": [
          {
              "type": "button",
              "label": "设计字段布局",
              "id": "u:delete_object",
              "onEvent": {
                  "click": {
                      "actions": [
                          {
                              "actionType": "dialog",
                              "dialog": {
                                  "type": "dialog",
                                  "title": "设计字段布局",
                                  "body": [
                                    {
                                        "type": "service",
                                        "body": [
                                          {
                                            "type": "service",
                                            "body": [
                                              {
                                                "type": "form",
                                                "title": "",
                                                "body": [
                                                  {
                                                    "type": "tpl",
                                                    "tpl": "${value | json}",
                                                    "id": "u:0fab4650b021"
                                                  },
                                                  {
                                                    "type": "button",
                                                    "id": "u:ec9931ea883c",
                                                    "actionType": "dialog",
                                                    "dialog": {
                                                      "type": "dialog",
                                                      "title": "设置分组",
                                                      "size": "lg",
                                                      "body": [
                                                        {
                                                          "type": "input-table",
                                                          "name": "setting_groups",
                                                          "addable": true,
                                                          "draggable": true,
                                                          "editable": true,
                                                          "columns": [
                                                            {
                                                              "name": "group_name",
                                                              "label": "名称",
                                                              "id": "u:ee2fb813a3e7"
                                                            },
                                                            {
                                                              "name": "visible_on",
                                                              "label": "显示条件",
                                                              "id": "u:ed37c3ff9dcb"
                                                            }
                                                          ],
                                                          "value": "${groups | filter:id:notIn:['未分组']}",
                                                          "removable": true,
                                                          "id": "u:e9f43ef94d08"
                                                        }
                                                      ],
                                                      "onEvent": {
                                                        "confirm": {
                                                          "actions": [
                                                            {
                                                              "actionType": "custom",
                                                              "script": "//整理分组数据\nconst setting_groups = event.data.setting_groups;\nsetting_groups.forEach(function (group) {\n  if (!group.id) {\n    group.id = group.group_name;\n  }\n})\nsetting_groups.unshift({\n  \"id\": \"未分组\",\n  \"group_name\": \"未分组\",\n  \"visible_on\": \"\"\n})\n\n//整理字段与分组关系的数据\nconst fieldForGroup = {};\nlet oldGroup = event.data.fieldForGroup;\nsetting_groups.forEach(function (group) {\n  if (_.has(oldGroup, group.id)) {\n    fieldForGroup[group.id] = oldGroup[group.id];\n    oldGroup = _.omit(oldGroup, group.id);\n  } else {\n    fieldForGroup[group.id] = [];\n  }\n})\nif (oldGroup && !_.isEmpty(oldGroup)) {\n  _.forEach(oldGroup, function (value, key) {\n    fieldForGroup[\"未分组\"] = _.unionBy(fieldForGroup[\"未分组\"], value);\n  });\n}\nconsole.log(\"setting_groups,fieldForGroup===>\", setting_groups, fieldForGroup);\n//修改面板上的数据\ndoAction({\n  actionType: 'setValue',\n  componentId: 'form_field_design',\n  args: {\n    value: { \n      fieldForGroup\n    }\n  }\n});\ndoAction({\n  actionType: 'setValue',\n  componentId: 'service_field_design',\n  args: {\n    value: {\n      groups: setting_groups\n    }\n  }\n});"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "id": "u:e02c8f59216e",
                                                      "closeOnEsc": false,
                                                      "closeOnOutside": false,
                                                      "showCloseButton": true,
                                                      "showErrorMsg": true,
                                                      "showLoading": true
                                                    },
                                                    "label": "设置分组"
                                                  },
                                                  {
                                                    "type": "steedos-board",
                                                    "id": "steedos_field_deign",
                                                    "columns": 2,
                                                    "name": "fieldForGroup",
                                                    "boardSource": "${groups}",
                                                    "boardClassName": "bg-gray-50 p-2 border rounded shadow",
                                                    "boardHeader": {
                                                      "type": "tpl",
                                                      "tpl": "字段分组：${group_name}",
                                                      "id": "u:76d9a6c7d401"
                                                    },
                                                    "cardClassName": "bg-white border w-full p-2 rounded shadow",
                                                    "cardSchema": {
                                                      "type": "card",
                                                      "header": {
                                                        "className": "items-center",
                                                        "title": "${label}(${name})"
                                                      },
                                                      "toolbar": [
                                                        {
                                                          "type": "steedos-dropdown-button",
                                                          "label": "xxx",
                                                          "buttons": [
                                                            {
                                                              "type": "steedos-object-button",
                                                              "name": "standard_edit",
                                                              "objectName": "object_fields",
                                                              "className": "antd-Button--default"
                                                            },
                                                            {
                                                              "type": "steedos-object-button",
                                                              "name": "standard_delete",
                                                              "objectName": "object_fields",
                                                              "className": "antd-Button--default"
                                                            }
                                                          ],
                                                          "placement": "bottomRight",
                                                          "overlayClassName": "shadow !min-w-[160px]",
                                                          "trigger": [
                                                            "click"
                                                          ],
                                                          "id": "u:c2140a365019",
                                                          "className": "mx-3"
                                                        }
                                                      ],
                                                      "className": "mb-0",
                                                      "id": "u:296298da1bef"
                                                    },
                                                    "cardSource": "${fields}",
                                                    "vertical": true,
                                                    "onEvent": {
                                                      "change": {
                                                        "actions": [
                                                          {
                                                            "actionType": "toast",
                                                            "args": {
                                                              "msgType": "warning",
                                                              "msg": "我是全局警告消息，可以配置不同类型和弹出位置~",
                                                              "position": "top-right"
                                                            }
                                                          },
                                                          {
                                                            "actionType": "custom",
                                                            "script": "debugger;"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "value": "${value}"
                                                  },
                                                  {
                                                    "type": "tpl",
                                                    "tpl": "${board}",
                                                    "id": "u:035ca23686ab"
                                                  }
                                                ],
                                                "id": "form_field_design",
                                                "api": {
                                                  "url": "${context.rootUrl}/graphql",
                                                  "method": "post",
                                                  "dataType": "json",
                                                  "headers": {
                                                    "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                                                  },
                                                  "requestAdaptor": "// debugger;\nvar graphqlOrder = \"\";\n//根据groups，修改对象的字段分组field_groups\nvar field_groups = api.data.groups;\n_.remove(field_groups, { id: '未分组' }); \nfield_groups = api.data.groups.map(function (group) {\n  return _.omit(group, 'id');\n})\nconst groupOrder = 'update0:objects__update(id:\"' + api.data.$self.object_id + '\" , doc:' + JSON.stringify(JSON.stringify({ field_groups })) + ') {_id}';\ngraphqlOrder += groupOrder;\n\n//根据fieldForGroup,修改对象字段的sort_no与groups\nvar index = 1;\n_.forEach(api.data.fieldForGroup, function (items,key) {\n  _.forEach(items, function (item) {\n    const itemOrder = 'update' + index + ':object_fields__update(id:\"' + item + '\" , doc:' + JSON.stringify(JSON.stringify({ sort_no: index, group: key == \"未分组\"?null:key })) + '){_id}\\n';\n    graphqlOrder += itemOrder;\n    index++;\n  })\n})\n\ngraphqlOrder = 'mutation {' + graphqlOrder + '}';\nreturn {\n  ...api,\n  data: {\n    query: graphqlOrder\n  }\n}",
                                                  "adaptor": "if (payload.errors) {\n  payload.status = 2;\n  payload.msg = window.t ? window.t(payload.errors[\n    0\n  ].message) : payload.errors[\n    0\n  ].message;\n}\nreturn payload;",
                                                  "messages": {},
                                                  "data": {
                                                    "fieldForGroup": "${fieldForGroup}",
                                                    "groups": "${groups}",
                                                    "fields": "${fields}",
                                                    "$self": "$$"
                                                  }
                                                },
                                                "debug": true,
                                                "actions": [
                                                  {
                                                    "type": "submit",
                                                    "label": "保存",
                                                    "id": "u:89e49bc61371"
                                                  }
                                                ],
                                                "visibleOn": "${dataInitialed}"
                                              }
                                            ],
                                            "id": "service_field_design",
                                            "api": {
                                              "method": "post",
                                              "url": "${context.rootUrl}/graphql",
                                              "data": {
                                                "query": "{fields:object_fields(filters: [[\"object\",\"=\",\"${record.name}\"]],sort: \"sort_no asc\"){_id,label,name,group,type,sort_no,modified,is_wide,recordPermissions: _permissions{allowEdit}}}",
                                                "field_groups": "${field_groups}"
                                              },
                                              "headers": {
                                                "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                                              },
                                              "messages": {},
                                              "requestAdaptor": "",
                                              "adaptor": "var oldFields = _.filter(payload.data.fields, function (obj) {return obj.recordPermissions.allowEdit;});oldFields = _.map(oldFields, function (obj) {\r\n  if (obj.group === null) {\r\n    obj.group = \"未分组\";\r\n  }\r\n  return obj;\r\n});\r\n\r\nconst fields = oldFields.map((field) => {\r\n  return {\r\n    \"id\": field._id,\r\n    \"name\": field.name,\r\n    \"label\": field.label\r\n,    \"_id\": field._id,\r\n      \"columnSpan\": field.is_wide?2:1 \r\n}\r\n})\r\n\r\nlet field_groups = _.map(_.uniqBy(oldFields, \"group\"), function (obj) {\r\n  return {\r\n    \"id\": obj.group,\r\n    \"group_name\": obj.group,\r\n    \"visible_on\": \"\"\r\n  };\r\n});\r\n\r\nconst groups = _.unionBy(api.data.field_groups, field_groups, 'id');\r\n\r\nconst value = _.mapValues(_.groupBy(oldFields, \"group\"), function (group) {\r\n  return _.map(group, function (obj) {\r\n    return obj._id;\r\n  });\r\n});\r\n\r\nreturn payload = {\r\n  data: {\r\n    fields,\r\n    groups,\r\n    value,\r\n    dataInitialed: true\r\n  }\r\n};"
                                            },
                                            "messages": {}
                                          }
                                        ],
                                        "data": {
                                          "dataInitialed": false
                                        },
                                        "id": "u:02f594329e1e",
                                        "api": {
                                          "method": "post",
                                          "url": "${context.rootUrl}/graphql",
                                          "data": {
                                            "query": "{fields:objects(filters: [[\"_id\",\"=\",\"${recordId}\"]]){_id,name,field_groups}}"
                                          },
                                          "headers": {
                                            "Authorization": "Bearer ${context.tenantId},${context.authToken}"
                                          },
                                          "messages": {},
                                          "requestAdaptor": "",
                                          "adaptor": "debugger;const field_groups = payload.data.fields[0] && _.map(payload.data.fields[0].field_groups, function (obj) {\r\n  return {\r\n    \"id\": obj.group_name,\r\n    \"group_name\": obj.group_name,\r\n    \"visible_on\": obj.visible_on\r\n  }\r\n});return payload = {\r\n  data: {\r\n    field_groups\r\n  }\r\n}"
                                        },
                                        "messages": {}
                                      }
                                  ],
                                  "id": "u:b5c0f98dc113",
                                  "closeOnEsc": false,
                                  "closeOnOutside": false,
                                  "showCloseButton": true,
                                  "data": {
                                      "&": "$$",
                                      "recordId": "${recordId}"
                                  },
                                  "onEvent": {
                                  }
                              }
                          }
                      ],
                      "weight": 0
                  }
              }
          }
      ],
      "regions": [
          "body"
      ],
      "data": {
      },
      "bodyClassName": "p-0",
      "id": "u:46d1821365fc"
  }
is_enable: true
label: 设计字段布局
'on': record_only
type: amis_button
visible: true
