{"version":3,"sources":["meteor://💻app/packages/steedos_records-qhd/server/lib/steedos_request.coffee","meteor://💻app/server/lib/steedos_request.coffee","meteor://💻app/packages/steedos_records-qhd/server/lib/instances_to_archive.coffee","meteor://💻app/server/lib/instances_to_archive.coffee","meteor://💻app/packages/steedos_records-qhd/server/lib/instances_to_contracts.coffee","meteor://💻app/server/lib/instances_to_contracts.coffee","meteor://💻app/packages/steedos_records-qhd/server/lib/records_qhd.coffee","meteor://💻app/server/lib/records_qhd.coffee","meteor://💻app/packages/steedos_records-qhd/server/methods/sync_contracts.coffee","meteor://💻app/server/methods/sync_contracts.coffee","meteor://💻app/packages/steedos_records-qhd/server/methods/sync_archive.coffee","meteor://💻app/server/methods/sync_archive.coffee","meteor://💻app/packages/steedos_records-qhd/server/routes/sync_contracts.coffee","meteor://💻app/server/routes/sync_contracts.coffee"],"names":["request","Npm","require","steedosRequest","postFormData","url","formData","cb","post","Random","id","headers","err","httpResponse","body","console","error","statusCode","postFormDataAsync","Meteor","wrapAsync","_checkParameter","_minxiAttachmentInfo","_minxiInstanceData","absolutePath","getFileHistoryName","logger","path","pathname","Logger","join","__meteor_bootstrap__","serverDir","resolve","InstancesToArchive","spaces","archive_server","contract_flows","ins_ids","prototype","getContractInstances","query","space","$in","flow","is_archived","is_deleted","state","_id","db","instances","find","fields","fetch","getNonContractInstances","$nin","success","instance","log","name","direct","update","$set","failed","FONDSID","fileName","historyName","stuff","extensionHistory","fName","regExp","replace","exec","attach","user","users","findOne","metadata","owner","attachInfo","push","attach_name","encodeURI","owner_username","username","steedos_id","is_private","attachInfoName","dataBuf","e","fieldNames","field_values","form","format","fs","html","mainFile","mainFilesHandle","nonMainFile","nonMainFileHandle","options","user_info","fileID","InstanceManager","handlerInstanceByFieldMap","_","extend","keys","forEach","key","fieldValue","ref","isDate","moment","isObject","isArray","length","getProperty","Array","applicant","f","filepath","mainFileHistory","mainFileHistoryLength","copies","existsSync","value","createReadStream","filename","error1","cfs","$ne","parent","sort","uploadedAt","fh","i","nonMainFileHistory","nonMainFileHistoryLength","distribute_from_instance","forms","showTrace","showAttachments","absolute","add_styles","InstanceReadOnlyTemplate","getInstanceHtml","Buffer","JSON","stringify","_sendContractInstance","callback","debug","sendContractInstances","to_archive_api","that","time","mini_ins","timeEnd","sendNonContractInstances","sendNonContractInstance","now","Date","guidangriqi","LAST_FILE_DATE","modified","FILE_DATE","submit_date","TITLE_PROPER","_fieldMap","InstancesToContracts","contracts_server","submit_date_start","submit_date_end","info","is_contract_archived","$gte","$lte","fileHandle","originalAttach","api","ret","successCount","count","r","sendContractInstance","applicant_name","flows","flowName","ref1","schedule","RecordsQHD","settings_records_qhd","settings","records_qhd","test","scheduleJobMaps","run","instanceToArchive","instanceToContracts","contract_archive_api","instancesToArchive","ref2","to_archive_sett","to_archive","contract_instances","non_contract_instances","instancesToContracts","to_contracts_sett","Error","to_contracts","startScheduleJob","recurrenceRule","fun","isString","isFunction","scheduleJob","bindEnvironment","methods","records_qhd_sync_contracts","spaceId","data","Steedos","isSpaceAdmin","userId","message","records_qhd_sync_archive","ins","values","final_decision","record_need","multi","Cookies","JsonRoutes","add","req","res","next","getAPILoginUser","sendResult","code"],"mappings":"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","file":"/packages/steedos_records-qhd.js","sourcesContent":["request = Npm.require('request')\n\n#DelayedStream = Npm.require('delayed-stream');\n#\n#FormData = Npm.require('form-data')\n#\n#CombinedStream = Npm.require('combined-stream');\n#\n#Stream = Npm.require('stream').Stream;\n#\n#asynckit = Npm.require('asynckit');\n#\n#request.Request.prototype.form = (form)->\n#\tself = this\n#\tif form\n#\t\tif !/^application\\/x-www-form-urlencoded\\b/.test(self.getHeader('content-type'))\n#\t\t\tself.setHeader 'content-type', 'application/x-www-form-urlencoded'\n#\t\tself.body = if typeof form == 'string' then self._qs.rfc3986(form.toString('utf8')) else self._qs.stringify(form).toString('utf8')\n#\t\treturn self\n#\t# create form-data object\n#\tself._form = new FormData({maxDataSize: Infinity})\n#\tself._form.on 'error', (err) ->\n#\t\terr.message = 'form-data: ' + err.message\n#\t\tself.emit 'error', err\n#\t\tself.abort()\n#\t\treturn\n#\treturn self._form\n#\n#FormData::getLength = (cb) ->\n#\tconsole.log(\"FormData.getLength...\");\n##\tcb null, 1024 * 1024 * 512\n#\n#\tknownLength = @_overheadLength + @_valueLength\n#\n#\tconsole.log(\"knownLength 33\", knownLength)\n#\n#\tif @_streams.length\n#\t\tknownLength += @_lastBoundary().length\n#\tif !@_valuesToMeasure.length\n#\t\tconsole.log(\"knownLength 38\", knownLength)\n#\t\tprocess.nextTick cb.bind(this, null, knownLength)\n#\t\treturn\n#\tconsole.log(\"knownLength 43\", knownLength)\n#\tasynckit.parallel @_valuesToMeasure, @_lengthRetriever, (err, values) ->\n#\t\tconsole.log(\"knownLength 45\", knownLength)\n#\t\tif err\n#\t\t\tcb err\n#\t\t\treturn\n#\t\tvalues.forEach (length) ->\n#\t\t\tknownLength += length\n#\t\t\treturn\n#\t\tcb null, knownLength\n#\t\treturn\n#\treturn\n#\n#FormData::_lengthRetriever = (value, callback) ->\n#\n#\tconsole.log(\"_lengthRetriever\", value.path, value.hasOwnProperty('httpModule'))\n#\n#\tconsole.log(\"_lengthRetriever 58 ...\")\n#\n#\tif value.hasOwnProperty('fd')\n#\t\tconsole.log(\"_lengthRetriever 63 ...\")\n#\t\tif value.end != undefined and value.end != Infinity and value.start != undefined\n#\t\t\tconsole.log(\"_lengthRetriever 65 ...\")\n#\t\t\tcallback null, value.end + 1 - (if value.start then value.start else 0)\n#\t\telse\n#\t\t\tconsole.log(\"_lengthRetriever 68 ...\")\n#\t\t\tfs.stat value.path, (err, stat) ->\n#\t\t\t\tconsole.log(\"_lengthRetriever 70 ...\")\n#\t\t\t\tfileSize = undefined\n#\t\t\t\tif err\n#\t\t\t\t\tcallback err\n#\t\t\t\t\treturn\n#\t\t\t\tfileSize = stat.size - (if value.start then value.start else 0)\n#\t\t\t\tcallback null, fileSize\n#\t\t\t\treturn\n#\telse if value.hasOwnProperty('httpVersion')\n#\t\tconsole.log(\"_lengthRetriever 79 ...\")\n#\t\tcallback null, +value.headers['content-length']\n#\telse if value.hasOwnProperty('httpModule')\n#\t\tconsole.log(\"_lengthRetriever 82 ...\")\n#\t\tvalue.on 'response', (response) ->\n#\t\t\tconsole.log(\"_lengthRetriever 84 ...\", value.path)\n#\t\t\tvalue.pause()\n#\t\t\tcallback null, +response.headers['content-length']\n#\t\t\treturn\n#\n#\t\tvalue.on 'data', (data)->\n#\t\t\tconsole.log(\"_lengthRetriever data\" , value.path)\n#\n#\t\tvalue.on 'error', (error) ->\n#\t\t\tconsole.log(\"_lengthRetriever 89\", error)\n#\t\tvalue.resume()\n#\telse\n#\t\tconsole.log(\"_lengthRetriever 90 ...\")\n#\t\tcallback 'Unknown stream'\n#\treturn\n\n#CombinedStream::_checkDataSize = ()->\n#\n#\tconsole.log(\"_checkDataSize...\", this._released)\n#\n#\tthis._updateDataSize();\n#\n##\tconsole.log(\"this._streams\", this._streams)\n#\n#\tconsole.log(this.dataSize)\n#\n#\tconsole.log(\"this.maxDataSize1\", this.maxDataSize)\n#\n##\tthis.maxDataSize = 512 * 1024 *1024\n#\n#\tconsole.log(\"this.maxDataSize2\", this.maxDataSize)\n#\n#\tif this.dataSize <= this.maxDataSize\n#\t\treturn;\n#\n#\tmessage = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded 33333333333333333333333.';\n#\n#\tconsole.log(\"ERROR message\", message)\n#\n#\tthis._emitError(new Error(message));\n\n#CombinedStream::append = (stream) ->\n#\n##\tthis.pauseStreams = false\n#\n#\tisStreamLike = CombinedStream.isStreamLike(stream)\n#\n##\tconsole.log \"isStreamLike\", isStreamLike\n#\n#\tif isStreamLike\n#\t\tif !(stream instanceof DelayedStream)\n#\t\t\tnewStream = DelayedStream.create(stream,\n#\t\t\t\tmaxDataSize: Infinity\n#\t\t\t\tpauseStream: @pauseStreams)\n#\t\t\tconsole.log(\"bind data...\")\n#\t\t\tstream.on 'data', @_checkDataSize.bind(this)\n#\t\t\tconsole.log(\"bind data2...\")\n#\t\t\tstream = newStream\n#\t\t@_handleErrors stream\n#\t\tif @pauseStreams\n#\t\t\tstream.pause()\n#\t@_streams.push stream\n#\tthis\n\n#CombinedStream::pipe = (dest, options) ->\n#\tdebugger;\n#\tconsole.log(\"CombinedStream::pipe...\")\n#\tconsole.log(\"CombinedStream::pipe...dest\", dest)\n#\tconsole.log(\"CombinedStream::pipe...options\", options)\n#\tconsole.log 'Function.caller', Function.caller\n#\n#\tStream::pipe.call this, dest, options\n#\t@resume()\n#\tdest\n#\n#console.log 'CombinedStream2', CombinedStream.prototype._checkDataSize\n\nsteedosRequest = {}\n\n# 以POST 方式提交formData数据值url\nsteedosRequest.postFormData = (url, formData, cb) ->\n\trequest.post {\n\t\turl: url + \"&r=\" + Random.id()\n\t\theaders: {\n\t\t\t'User-Agent': 'Mozilla/5.0'\n\t\t}\n\t\tformData: formData\n\t}, (err, httpResponse, body) ->\n\t\tcb err, httpResponse, body\n\n\t\tif err\n\t\t\tconsole.error('upload failed:', err)\n\t\t\treturn\n\t\tif httpResponse.statusCode == 200\n#\t\t\tconsole.info(\"success, name is #{formData.TITLE_PROPER}, id is #{formData.fileID}\")\n\t\t\treturn\n\nsteedosRequest.postFormDataAsync = Meteor.wrapAsync(steedosRequest.postFormData);","var request;                \n\nrequest = Npm.require('request');\n\nsteedosRequest = {};\n\nsteedosRequest.postFormData = function(url, formData, cb) {\n  return request.post({\n    url: url + \"&r=\" + Random.id(),\n    headers: {\n      'User-Agent': 'Mozilla/5.0'\n    },\n    formData: formData\n  }, function(err, httpResponse, body) {\n    cb(err, httpResponse, body);\n    if (err) {\n      console.error('upload failed:', err);\n      return;\n    }\n    if (httpResponse.statusCode === 200) {\n\n    }\n  });\n};\n\nsteedosRequest.postFormDataAsync = Meteor.wrapAsync(steedosRequest.postFormData);\n","request = Npm.require('request')\npath = Npm.require('path');\n\nlogger = new Logger 'Records_QHD -> InstancesToArchive'\n\npathname = path.join(__meteor_bootstrap__.serverDir, '../../../cfs/files/instances');\n\nabsolutePath = path.resolve(pathname);\n\n#logger = console\n#\n#logger.debug = console.log\n\n# spaces: Array 工作区ID\n# archive_server: String 档案系统服务\n# contract_flows： Array 合同类流程\nInstancesToArchive = (spaces, archive_server, contract_flows, ins_ids) ->\n\t@spaces = spaces\n\t@archive_server = archive_server\n\t@contract_flows = contract_flows\n\t@ins_ids = ins_ids\n\treturn\n\n#\t获取合同类的申请单：正常结束的(不包括取消申请、被驳回的申请单)\nInstancesToArchive::getContractInstances = ()->\n\tquery = {\n\t\tspace: {$in: @spaces},\n\t\tflow: {$in: @contract_flows},\n\t\tis_archived: false,\n\t\tis_deleted: false,\n\t\tstate: \"completed\",\n\t\t\"values.record_need\": \"true\",\n#\t\t$or: [{final_decision: \"approved\"}, {final_decision: {$exists: false}}, {final_decision: \"\"}]\n\t}\n\n\tif @ins_ids\n\t\tquery._id = {$in: @ins_ids}\n\n\treturn db.instances.find(query, {fields: {_id: 1}}).fetch()\n\nInstancesToArchive::getNonContractInstances = ()->\n\tquery = {\n\t\tspace: {$in: @spaces},\n\t\tflow: {$nin: @contract_flows},\n\t\tis_archived: false,\n\t\tis_deleted: false,\n\t\tstate: \"completed\",\n\t\t\"values.record_need\": \"true\",\n#\t\t$or: [{final_decision: \"approved\"}, {final_decision: {$exists: false}}, {final_decision: \"\"}]\n\t}\n\n\tif @ins_ids\n\t\tquery._id = {$in: @ins_ids}\n\n\treturn db.instances.find(query, {fields: {_id: 1}}).fetch()\n\nInstancesToArchive.success = (instance)->\n\tconsole.log(\"success, name is #{instance.name}, id is #{instance._id}\")\n\tdb.instances.direct.update({_id: instance._id}, {$set: {is_archived: true}})\n\nInstancesToArchive.failed = (instance, error)->\n\tconsole.log(\"failed, name is #{instance.name}, id is #{instance._id}. error: \")\n\tconsole.log error\n\n#\t校验必填\n_checkParameter = (formData) ->\n\tif !formData.FONDSID\n\t\treturn false\n\treturn true\n\ngetFileHistoryName = (fileName, historyName, stuff) ->\n\tregExp = /\\.[^\\.]+/\n\n\tfName = fileName.replace(regExp, \"\")\n\n\textensionHistory = regExp.exec(historyName)\n\n\tif(extensionHistory)\n\t\tfName = fName + \"_\" + stuff + extensionHistory\n\telse\n\t\tfName = fName + \"_\" + stuff\n\n\treturn fName\n\n_minxiAttachmentInfo = (formData, instance, attach) ->\n\tuser = db.users.findOne({_id: attach.metadata.owner})\n\tformData.attachInfo.push {\n\t\tinstance: instance._id,\n\t\tattach_name: encodeURI(attach.name()),\n\t\towner: attach.metadata.owner,\n\t\towner_username: encodeURI(user.username || user.steedos_id),\n\t\tis_private: attach.metadata.is_private || false\n\t}\n\n_minxiInstanceData = (formData, instance) ->\n\tconsole.log(\"_minxiInstanceData\", instance._id)\n\n\tfs = Npm.require('fs');\n\n\tif !formData || !instance\n\t\treturn\n\n\tformat = \"YYYY-MM-DD HH:mm:ss\"\n\n\tformData.fileID = instance._id\n\n\tfield_values = InstanceManager.handlerInstanceByFieldMap(instance);\n\n\tformData = _.extend formData, field_values\n\n\tfieldNames = _.keys(formData)\n\n\tfieldNames.forEach (key)->\n\t\tfieldValue = formData[key]\n\n\t\tif _.isDate(fieldValue)\n\t\t\tfieldValue = moment(fieldValue).format(format)\n\n\t\tif _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.name\n\n\t\tif _.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.getProperty(\"name\")?.join(\",\")\n\n\t\tif _.isArray(fieldValue)\n\t\t\tfieldValue = fieldValue?.join(\",\")\n\n\t\tif !fieldValue\n\t\t\tfieldValue = ''\n\n\t\tformData[key] = encodeURI(fieldValue)\n\n\tformData.attach = new Array()\n\n\tformData.attachInfo = new Array();\n\n\t#\t提交人信息\n\tuser_info = db.users.findOne({_id: instance.applicant})\n\n\tmainFilesHandle = (f)->\n\t\ttry\n\t\t\tfilepath = path.join(absolutePath, f.copies.instances.key);\n\n\t\t\tif fs.existsSync(filepath)\n\t\t\t\tformData.attach.push {\n\t\t\t\t\tvalue: fs.createReadStream(filepath),\n\t\t\t\t\toptions: {filename: f.name()}\n\t\t\t\t}\n\n\t\t\t\t_minxiAttachmentInfo formData, instance, f\n\t\t\telse\n\t\t\t\tlogger.error \"附件不存在：#{filepath}\"\n\n\t\tcatch e\n\t\t\tlogger.error \"正文附件下载失败：#{f._id},#{f.name()}. error: \" + e\n\t\t#\t\t正文附件历史版本\n\t\tif f.metadata.instance == instance._id\n\t\t\tmainFileHistory = cfs.instances.find({\n\t\t\t\t'metadata.instance': f.metadata.instance,\n\t\t\t\t'metadata.current': {$ne: true},\n\t\t\t\t\"metadata.main\": true,\n\t\t\t\t\"metadata.parent\": f.metadata.parent\n\t\t\t}, {sort: {uploadedAt: -1}}).fetch()\n\n\t\t\tmainFileHistoryLength = mainFileHistory.length\n\n\t\t\tmainFileHistory.forEach (fh, i) ->\n\t\t\t\tfName = getFileHistoryName f.name(), fh.name(), mainFileHistoryLength - i\n\t\t\t\ttry\n\t\t\t\t\tfilepath = path.join(absolutePath, fh.copies.instances.key);\n\t\t\t\t\tif fs.existsSync(filepath)\n\t\t\t\t\t\tformData.attach.push {\n\t\t\t\t\t\t\tvalue: fs.createReadStream(filepath),\n\t\t\t\t\t\t\toptions: {filename: fName}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_minxiAttachmentInfo formData, instance, f\n\t\t\t\t\telse\n\t\t\t\t\t\tlogger.error \"附件不存在：#{filepath}\"\n\t\t\t\tcatch e\n\t\t\t\t\tlogger.error \"正文附件下载失败：#{f._id},#{f.name()}. error: \" + e\n\n\n\tnonMainFileHandle = (f)->\n\t\ttry\n\t\t\tfilepath = path.join(absolutePath, f.copies.instances.key);\n\t\t\tif fs.existsSync(filepath)\n\t\t\t\tformData.attach.push {\n\t\t\t\t\tvalue: fs.createReadStream(filepath),\n\t\t\t\t\toptions: {filename: f.name()}\n\t\t\t\t}\n\t\t\t\t_minxiAttachmentInfo formData, instance, f\n\t\t\telse\n\t\t\t\tlogger.error \"附件不存在：#{filepath}\"\n\t\tcatch e\n\t\t\tlogger.error \"附件下载失败：#{f._id},#{f.name()}. error: \" + e\n\t\t#\t非正文附件历史版本\n\t\tif f.metadata.instance == instance._id\n\t\t\tnonMainFileHistory = cfs.instances.find({\n\t\t\t\t'metadata.instance': f.metadata.instance,\n\t\t\t\t'metadata.current': {$ne: true},\n\t\t\t\t\"metadata.main\": {$ne: true},\n\t\t\t\t\"metadata.parent\": f.metadata.parent\n\t\t\t}, {sort: {uploadedAt: -1}}).fetch()\n\n\t\t\tnonMainFileHistoryLength = nonMainFileHistory.length\n\n\t\t\tnonMainFileHistory.forEach (fh, i) ->\n\t\t\t\tfName = getFileHistoryName f.name(), fh.name(), nonMainFileHistoryLength - i\n\t\t\t\ttry\n\t\t\t\t\tfilepath = path.join(absolutePath, fh.copies.instances.key);\n\t\t\t\t\tif fs.existsSync(filepath)\n\t\t\t\t\t\tformData.attach.push {\n\t\t\t\t\t\t\tvalue: fs.createReadStream(filepath),\n\t\t\t\t\t\t\toptions: {filename: fName}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_minxiAttachmentInfo formData, instance, f\n\t\t\t\t\telse\n\t\t\t\t\t\tlogger.error \"附件不存在：#{filepath}\"\n\t\t\t\tcatch e\n\t\t\t\t\tlogger.error \"附件下载失败：#{f._id},#{f.name()}. error: \" + e\n\n\t#\t正文附件\n\tmainFile = cfs.instances.find({\n\t\t'metadata.instance': instance._id,\n\t\t'metadata.current': true,\n\t\t\"metadata.main\": true\n\t}).fetch()\n\n\tmainFile.forEach mainFilesHandle\n\n\tconsole.log(\"正文附件读取完成\")\n\n\t#\t非正文附件\n\tnonMainFile = cfs.instances.find({\n\t\t'metadata.instance': instance._id,\n\t\t'metadata.current': true,\n\t\t\"metadata.main\": {$ne: true}\n\t}).fetch()\n\n\tnonMainFile.forEach nonMainFileHandle\n\n\tconsole.log(\"非正文附件读取完成\")\n\n\t#分发\n\tif instance.distribute_from_instance\n\t\t#\t正文附件\n\t\tmainFile = cfs.instances.find({\n\t\t\t'metadata.instance': instance.distribute_from_instance,\n\t\t\t'metadata.current': true,\n\t\t\t\"metadata.main\": true,\n\t\t\t\"metadata.is_private\": {\n\t\t\t\t$ne: true\n\t\t\t}\n\t\t}).fetch()\n\n\t\tmainFile.forEach mainFilesHandle\n\n\t\tconsole.log(\"分发-正文附件读取完成\")\n\n\t\t#\t非正文附件\n\t\tnonMainFile = cfs.instances.find({\n\t\t\t'metadata.instance': instance.distribute_from_instance,\n\t\t\t'metadata.current': true,\n\t\t\t\"metadata.main\": {$ne: true},\n\t\t\t\"metadata.is_private\": {\n\t\t\t\t$ne: true\n\t\t\t}\n\t\t})\n\n\t\tnonMainFile.forEach nonMainFileHandle\n\n\t\tconsole.log(\"分发-非正文附件读取完成\")\n\n\t#\t原文\n\tform = db.forms.findOne({_id: instance.form})\n\n\tattachInfoName = \"F_#{form?.name}_#{instance._id}_1.html\";\n\n\tspace = db.spaces.findOne({_id: instance.space});\n\n\tuser = db.users.findOne({_id: space.owner})\n\n\toptions = {showTrace: false, showAttachments: false, absolute: true, add_styles: '.box-success{border-top: 0px !important;}'}\n\n\thtml = InstanceReadOnlyTemplate.getInstanceHtml(user, space, instance, options)\n\n\tdataBuf = new Buffer(html);\n\n\ttry\n\t\tformData.attach.push {\n\t\t\tvalue: dataBuf,\n\t\t\toptions: {filename: attachInfoName}\n\t\t}\n\n\t\tconsole.log(\"原文读取完成\")\n\tcatch e\n\t\tlogger.error \"原文读取失败#{instance._id}. error: \" + e\n\n\tformData.attachInfo = JSON.stringify(formData.attachInfo)\n\n\tconsole.log(\"_minxiInstanceData end\", instance._id)\n\n\treturn formData;\n\n\nInstancesToArchive._sendContractInstance = (url, instance, callback) ->\n\n#\t表单数据\n\tformData = {}\n\n\t_minxiInstanceData(formData, instance)\n\n\tif _checkParameter(formData)\n\n\t\tlogger.debug(\"_sendContractInstance: #{instance._id}\")\n\n\t\t#\t发送数据\n\t\thttpResponse = steedosRequest.postFormDataAsync url, formData, callback\n\n\t\tif httpResponse?.statusCode == 200\n\t\t\tInstancesToArchive.success instance\n\t\telse\n\t\t\tInstancesToArchive.failed instance, httpResponse?.body\n\n\t\thttpResponse = null\n\telse\n\t\tInstancesToArchive.failed instance, \"立档单位 不能为空\"\n\n\nInstancesToArchive::sendContractInstances = (to_archive_api) ->\n\tconsole.time(\"sendContractInstances\")\n\tinstances = @getContractInstances()\n\n\tthat = @\n\tconsole.log \"instances.length is #{instances.length}\"\n\tinstances.forEach (mini_ins, i)->\n\t\tinstance = db.instances.findOne({_id: mini_ins._id})\n\n\t\tif instance\n\t\t\turl = that.archive_server + to_archive_api + '?externalId=' + instance._id\n\n\t\t\tconsole.log(\"InstancesToArchive.sendContractInstances url\", url)\n\n\t\t\tInstancesToArchive._sendContractInstance url, instance\n\n\tconsole.timeEnd(\"sendContractInstances\")\n\n\nInstancesToArchive::sendNonContractInstances = (to_archive_api) ->\n\tconsole.time(\"sendNonContractInstances\")\n\tinstances = @getNonContractInstances()\n\tthat = @\n\tconsole.log \"instances.length is #{instances.length}\"\n\tinstances.forEach (mini_ins)->\n\t\tinstance = db.instances.findOne({_id: mini_ins._id})\n\t\tif instance\n\t\t\turl = that.archive_server + to_archive_api + '?externalId=' + instance._id\n\t\t\tconsole.log(\"InstancesToArchive.sendNonContractInstances url\", url)\n\t\t\tInstancesToArchive.sendNonContractInstance url, instance\n\n\tconsole.timeEnd(\"sendNonContractInstances\")\n\n\nInstancesToArchive.sendNonContractInstance = (url, instance, callback) ->\n\tformat = \"YYYY-MM-DD HH:mm:ss\"\n\n\t#\t表单数据\n\tformData = {}\n\n\t#\t设置归档日期\n\tnow = new Date()\n\n\tformData.guidangriqi = moment(now).format(format)\n\n\tformData.LAST_FILE_DATE = moment(instance.modified).format(format)\n\n\tformData.FILE_DATE = moment(instance.submit_date).format(format)\n\n\tformData.TITLE_PROPER = instance.name || \"无\"\n\n\t_minxiInstanceData(formData, instance)\n\n\tif _checkParameter(formData)\n\n#\t\tconsole.log \"formData\", formData\n\n\t\tlogger.debug(\"_sendContractInstance: #{instance._id}\")\n\n\t\t#\t发送数据\n\t\thttpResponse = steedosRequest.postFormDataAsync url, formData, callback\n\n\t\tif httpResponse?.statusCode == 200\n\t\t\tInstancesToArchive.success instance\n\t\telse\n\t\t\tInstancesToArchive.failed instance, httpResponse?.body\n\n\t\thttpResponse = null\n\telse\n\t\tInstancesToArchive.failed instance, \"立档单位 不能为空\"","var _checkParameter, _minxiAttachmentInfo, _minxiInstanceData, absolutePath, getFileHistoryName, logger, path, pathname, request;                    \n\nrequest = Npm.require('request');\n\npath = Npm.require('path');\n\nlogger = new Logger('Records_QHD -> InstancesToArchive');\n\npathname = path.join(__meteor_bootstrap__.serverDir, '../../../cfs/files/instances');\n\nabsolutePath = path.resolve(pathname);\n\nInstancesToArchive = function(spaces, archive_server, contract_flows, ins_ids) {\n  this.spaces = spaces;\n  this.archive_server = archive_server;\n  this.contract_flows = contract_flows;\n  this.ins_ids = ins_ids;\n};\n\nInstancesToArchive.prototype.getContractInstances = function() {\n  var query;\n  query = {\n    space: {\n      $in: this.spaces\n    },\n    flow: {\n      $in: this.contract_flows\n    },\n    is_archived: false,\n    is_deleted: false,\n    state: \"completed\",\n    \"values.record_need\": \"true\"\n  };\n  if (this.ins_ids) {\n    query._id = {\n      $in: this.ins_ids\n    };\n  }\n  return db.instances.find(query, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n};\n\nInstancesToArchive.prototype.getNonContractInstances = function() {\n  var query;\n  query = {\n    space: {\n      $in: this.spaces\n    },\n    flow: {\n      $nin: this.contract_flows\n    },\n    is_archived: false,\n    is_deleted: false,\n    state: \"completed\",\n    \"values.record_need\": \"true\"\n  };\n  if (this.ins_ids) {\n    query._id = {\n      $in: this.ins_ids\n    };\n  }\n  return db.instances.find(query, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n};\n\nInstancesToArchive.success = function(instance) {\n  console.log(\"success, name is \" + instance.name + \", id is \" + instance._id);\n  return db.instances.direct.update({\n    _id: instance._id\n  }, {\n    $set: {\n      is_archived: true\n    }\n  });\n};\n\nInstancesToArchive.failed = function(instance, error) {\n  console.log(\"failed, name is \" + instance.name + \", id is \" + instance._id + \". error: \");\n  return console.log(error);\n};\n\n_checkParameter = function(formData) {\n  if (!formData.FONDSID) {\n    return false;\n  }\n  return true;\n};\n\ngetFileHistoryName = function(fileName, historyName, stuff) {\n  var extensionHistory, fName, regExp;\n  regExp = /\\.[^\\.]+/;\n  fName = fileName.replace(regExp, \"\");\n  extensionHistory = regExp.exec(historyName);\n  if (extensionHistory) {\n    fName = fName + \"_\" + stuff + extensionHistory;\n  } else {\n    fName = fName + \"_\" + stuff;\n  }\n  return fName;\n};\n\n_minxiAttachmentInfo = function(formData, instance, attach) {\n  var user;\n  user = db.users.findOne({\n    _id: attach.metadata.owner\n  });\n  return formData.attachInfo.push({\n    instance: instance._id,\n    attach_name: encodeURI(attach.name()),\n    owner: attach.metadata.owner,\n    owner_username: encodeURI(user.username || user.steedos_id),\n    is_private: attach.metadata.is_private || false\n  });\n};\n\n_minxiInstanceData = function(formData, instance) {\n  var attachInfoName, dataBuf, e, fieldNames, field_values, form, format, fs, html, mainFile, mainFilesHandle, nonMainFile, nonMainFileHandle, options, space, user, user_info;\n  console.log(\"_minxiInstanceData\", instance._id);\n  fs = Npm.require('fs');\n  if (!formData || !instance) {\n    return;\n  }\n  format = \"YYYY-MM-DD HH:mm:ss\";\n  formData.fileID = instance._id;\n  field_values = InstanceManager.handlerInstanceByFieldMap(instance);\n  formData = _.extend(formData, field_values);\n  fieldNames = _.keys(formData);\n  fieldNames.forEach(function(key) {\n    var fieldValue, ref;\n    fieldValue = formData[key];\n    if (_.isDate(fieldValue)) {\n      fieldValue = moment(fieldValue).format(format);\n    }\n    if (_.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.name : void 0;\n    }\n    if (_.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? (ref = fieldValue.getProperty(\"name\")) != null ? ref.join(\",\") : void 0 : void 0;\n    }\n    if (_.isArray(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.join(\",\") : void 0;\n    }\n    if (!fieldValue) {\n      fieldValue = '';\n    }\n    return formData[key] = encodeURI(fieldValue);\n  });\n  formData.attach = new Array();\n  formData.attachInfo = new Array();\n  user_info = db.users.findOne({\n    _id: instance.applicant\n  });\n  mainFilesHandle = function(f) {\n    var e, filepath, mainFileHistory, mainFileHistoryLength;\n    try {\n      filepath = path.join(absolutePath, f.copies.instances.key);\n      if (fs.existsSync(filepath)) {\n        formData.attach.push({\n          value: fs.createReadStream(filepath),\n          options: {\n            filename: f.name()\n          }\n        });\n        _minxiAttachmentInfo(formData, instance, f);\n      } else {\n        logger.error(\"附件不存在：\" + filepath);\n      }\n    } catch (error1) {\n      e = error1;\n      logger.error((\"正文附件下载失败：\" + f._id + \",\" + (f.name()) + \". error: \") + e);\n    }\n    if (f.metadata.instance === instance._id) {\n      mainFileHistory = cfs.instances.find({\n        'metadata.instance': f.metadata.instance,\n        'metadata.current': {\n          $ne: true\n        },\n        \"metadata.main\": true,\n        \"metadata.parent\": f.metadata.parent\n      }, {\n        sort: {\n          uploadedAt: -1\n        }\n      }).fetch();\n      mainFileHistoryLength = mainFileHistory.length;\n      return mainFileHistory.forEach(function(fh, i) {\n        var fName;\n        fName = getFileHistoryName(f.name(), fh.name(), mainFileHistoryLength - i);\n        try {\n          filepath = path.join(absolutePath, fh.copies.instances.key);\n          if (fs.existsSync(filepath)) {\n            formData.attach.push({\n              value: fs.createReadStream(filepath),\n              options: {\n                filename: fName\n              }\n            });\n            return _minxiAttachmentInfo(formData, instance, f);\n          } else {\n            return logger.error(\"附件不存在：\" + filepath);\n          }\n        } catch (error1) {\n          e = error1;\n          return logger.error((\"正文附件下载失败：\" + f._id + \",\" + (f.name()) + \". error: \") + e);\n        }\n      });\n    }\n  };\n  nonMainFileHandle = function(f) {\n    var e, filepath, nonMainFileHistory, nonMainFileHistoryLength;\n    try {\n      filepath = path.join(absolutePath, f.copies.instances.key);\n      if (fs.existsSync(filepath)) {\n        formData.attach.push({\n          value: fs.createReadStream(filepath),\n          options: {\n            filename: f.name()\n          }\n        });\n        _minxiAttachmentInfo(formData, instance, f);\n      } else {\n        logger.error(\"附件不存在：\" + filepath);\n      }\n    } catch (error1) {\n      e = error1;\n      logger.error((\"附件下载失败：\" + f._id + \",\" + (f.name()) + \". error: \") + e);\n    }\n    if (f.metadata.instance === instance._id) {\n      nonMainFileHistory = cfs.instances.find({\n        'metadata.instance': f.metadata.instance,\n        'metadata.current': {\n          $ne: true\n        },\n        \"metadata.main\": {\n          $ne: true\n        },\n        \"metadata.parent\": f.metadata.parent\n      }, {\n        sort: {\n          uploadedAt: -1\n        }\n      }).fetch();\n      nonMainFileHistoryLength = nonMainFileHistory.length;\n      return nonMainFileHistory.forEach(function(fh, i) {\n        var fName;\n        fName = getFileHistoryName(f.name(), fh.name(), nonMainFileHistoryLength - i);\n        try {\n          filepath = path.join(absolutePath, fh.copies.instances.key);\n          if (fs.existsSync(filepath)) {\n            formData.attach.push({\n              value: fs.createReadStream(filepath),\n              options: {\n                filename: fName\n              }\n            });\n            return _minxiAttachmentInfo(formData, instance, f);\n          } else {\n            return logger.error(\"附件不存在：\" + filepath);\n          }\n        } catch (error1) {\n          e = error1;\n          return logger.error((\"附件下载失败：\" + f._id + \",\" + (f.name()) + \". error: \") + e);\n        }\n      });\n    }\n  };\n  mainFile = cfs.instances.find({\n    'metadata.instance': instance._id,\n    'metadata.current': true,\n    \"metadata.main\": true\n  }).fetch();\n  mainFile.forEach(mainFilesHandle);\n  console.log(\"正文附件读取完成\");\n  nonMainFile = cfs.instances.find({\n    'metadata.instance': instance._id,\n    'metadata.current': true,\n    \"metadata.main\": {\n      $ne: true\n    }\n  }).fetch();\n  nonMainFile.forEach(nonMainFileHandle);\n  console.log(\"非正文附件读取完成\");\n  if (instance.distribute_from_instance) {\n    mainFile = cfs.instances.find({\n      'metadata.instance': instance.distribute_from_instance,\n      'metadata.current': true,\n      \"metadata.main\": true,\n      \"metadata.is_private\": {\n        $ne: true\n      }\n    }).fetch();\n    mainFile.forEach(mainFilesHandle);\n    console.log(\"分发-正文附件读取完成\");\n    nonMainFile = cfs.instances.find({\n      'metadata.instance': instance.distribute_from_instance,\n      'metadata.current': true,\n      \"metadata.main\": {\n        $ne: true\n      },\n      \"metadata.is_private\": {\n        $ne: true\n      }\n    });\n    nonMainFile.forEach(nonMainFileHandle);\n    console.log(\"分发-非正文附件读取完成\");\n  }\n  form = db.forms.findOne({\n    _id: instance.form\n  });\n  attachInfoName = \"F_\" + (form != null ? form.name : void 0) + \"_\" + instance._id + \"_1.html\";\n  space = db.spaces.findOne({\n    _id: instance.space\n  });\n  user = db.users.findOne({\n    _id: space.owner\n  });\n  options = {\n    showTrace: false,\n    showAttachments: false,\n    absolute: true,\n    add_styles: '.box-success{border-top: 0px !important;}'\n  };\n  html = InstanceReadOnlyTemplate.getInstanceHtml(user, space, instance, options);\n  dataBuf = new Buffer(html);\n  try {\n    formData.attach.push({\n      value: dataBuf,\n      options: {\n        filename: attachInfoName\n      }\n    });\n    console.log(\"原文读取完成\");\n  } catch (error1) {\n    e = error1;\n    logger.error((\"原文读取失败\" + instance._id + \". error: \") + e);\n  }\n  formData.attachInfo = JSON.stringify(formData.attachInfo);\n  console.log(\"_minxiInstanceData end\", instance._id);\n  return formData;\n};\n\nInstancesToArchive._sendContractInstance = function(url, instance, callback) {\n  var formData, httpResponse;\n  formData = {};\n  _minxiInstanceData(formData, instance);\n  if (_checkParameter(formData)) {\n    logger.debug(\"_sendContractInstance: \" + instance._id);\n    httpResponse = steedosRequest.postFormDataAsync(url, formData, callback);\n    if ((httpResponse != null ? httpResponse.statusCode : void 0) === 200) {\n      InstancesToArchive.success(instance);\n    } else {\n      InstancesToArchive.failed(instance, httpResponse != null ? httpResponse.body : void 0);\n    }\n    return httpResponse = null;\n  } else {\n    return InstancesToArchive.failed(instance, \"立档单位 不能为空\");\n  }\n};\n\nInstancesToArchive.prototype.sendContractInstances = function(to_archive_api) {\n  var instances, that;\n  console.time(\"sendContractInstances\");\n  instances = this.getContractInstances();\n  that = this;\n  console.log(\"instances.length is \" + instances.length);\n  instances.forEach(function(mini_ins, i) {\n    var instance, url;\n    instance = db.instances.findOne({\n      _id: mini_ins._id\n    });\n    if (instance) {\n      url = that.archive_server + to_archive_api + '?externalId=' + instance._id;\n      console.log(\"InstancesToArchive.sendContractInstances url\", url);\n      return InstancesToArchive._sendContractInstance(url, instance);\n    }\n  });\n  return console.timeEnd(\"sendContractInstances\");\n};\n\nInstancesToArchive.prototype.sendNonContractInstances = function(to_archive_api) {\n  var instances, that;\n  console.time(\"sendNonContractInstances\");\n  instances = this.getNonContractInstances();\n  that = this;\n  console.log(\"instances.length is \" + instances.length);\n  instances.forEach(function(mini_ins) {\n    var instance, url;\n    instance = db.instances.findOne({\n      _id: mini_ins._id\n    });\n    if (instance) {\n      url = that.archive_server + to_archive_api + '?externalId=' + instance._id;\n      console.log(\"InstancesToArchive.sendNonContractInstances url\", url);\n      return InstancesToArchive.sendNonContractInstance(url, instance);\n    }\n  });\n  return console.timeEnd(\"sendNonContractInstances\");\n};\n\nInstancesToArchive.sendNonContractInstance = function(url, instance, callback) {\n  var formData, format, httpResponse, now;\n  format = \"YYYY-MM-DD HH:mm:ss\";\n  formData = {};\n  now = new Date();\n  formData.guidangriqi = moment(now).format(format);\n  formData.LAST_FILE_DATE = moment(instance.modified).format(format);\n  formData.FILE_DATE = moment(instance.submit_date).format(format);\n  formData.TITLE_PROPER = instance.name || \"无\";\n  _minxiInstanceData(formData, instance);\n  if (_checkParameter(formData)) {\n    logger.debug(\"_sendContractInstance: \" + instance._id);\n    httpResponse = steedosRequest.postFormDataAsync(url, formData, callback);\n    if ((httpResponse != null ? httpResponse.statusCode : void 0) === 200) {\n      InstancesToArchive.success(instance);\n    } else {\n      InstancesToArchive.failed(instance, httpResponse != null ? httpResponse.body : void 0);\n    }\n    return httpResponse = null;\n  } else {\n    return InstancesToArchive.failed(instance, \"立档单位 不能为空\");\n  }\n};\n","request = Npm.require('request')\n\npath = Npm.require('path');\n\npathname = path.join(__meteor_bootstrap__.serverDir, '../../../cfs/files/instances');\n\nabsolutePath = path.resolve(pathname);\n\nlogger = new Logger 'Records_QHD -> InstancesToContracts'\n\n_fieldMap = \"\"\"\n\t{\n\t\tprojectName: values[\"计划编号\"],\n\t\tcontractType: values[\"合同类型\"],\n\t\tchengBanDanWei: values[\"承办单位\"],\n\t\tchengBanRen: values[\"承办人员\"],\n\t\totherUnit: values[\"对方单位\"],\n\t\tregisteredCapital: values[\"对方注册资金\"] * 10000,\n\t\tcontractAmount: values[\"价款酬金\"],\n\t\tsignedDate: values[\"签订日期\"],\n\t\tstartDate: values[\"开始日期\"],\n\t\toverDate: values[\"终止日期\"],\n\t\tremarks: values[\"备注\"],\n\t\tboP: values[\"收支类别\"],\n\t\tisConnectedTransaction: values[\"是否关联交易\"],\n\t\tcontractId: values[\"合同编号\"],\n\t\tcontractName: values[\"合同名称\"]\n\t}\n\"\"\"\n\nInstancesToContracts = (spaces, contracts_server, contract_flows, submit_date_start, submit_date_end) ->\n\t@spaces = spaces\n\t@contracts_server = contracts_server\n\t@contract_flows = contract_flows\n\t@submit_date_start = submit_date_start\n\t@submit_date_end = submit_date_end\n\treturn\n\nInstancesToContracts.success = (instance)->\n\tlogger.info(\"success, name is #{instance.name}, id is #{instance._id}\")\n\tdb.instances.direct.update({_id: instance._id}, {$set: {is_contract_archived: true}})\n\nInstancesToContracts.failed = (instance, error)->\n\tlogger.error(\"failed, name is #{instance.name}, id is #{instance._id}. error: \")\n\tlogger.error error\n\nInstancesToContracts::getContractInstances = ()->\n\tquery = {\n\t\tspace: {$in: @spaces},\n\t\tflow: {$in: @contract_flows},\n\t\tis_deleted: false,\n\t\tstate: \"completed\",\n\t\t\"values.币种\": \"人民币\",\n#\t\t$or: [{final_decision: \"approved\"}, {final_decision: {$exists: false}}, {final_decision: \"\"}]\n\t}\n\n\tif @submit_date_start && @submit_date_end\n\t\tquery.submit_date = {$gte: @submit_date_start, $lte: @submit_date_end}\n\telse\n\t\tquery.is_contract_archived = {$ne: true}\n\n\treturn db.instances.find(query, {fields: {_id: 1}}).fetch()\n\n_minxiInstanceData = (formData, instance) ->\n\n\tconsole.log(\"_minxiInstanceData\", instance._id)\n\n\tfs = Npm.require('fs');\n\n\tif !formData || !instance\n\t\treturn\n\n\tformat = \"YYYY-MM-DD HH:mm:ss\"\n\n\tformData.fileID = instance._id\n\n\tfield_values = InstanceManager.handlerInstanceByFieldMap(instance, _fieldMap);\n\n\tformData = _.extend formData, field_values\n\n\tfieldNames = _.keys(formData)\n\n\tfieldNames.forEach (key)->\n\t\tfieldValue = formData[key]\n\n\t\tif _.isDate(fieldValue)\n\t\t\tfieldValue = moment(fieldValue).format(format)\n\n\t\tif _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.name\n\n\t\tif _.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)\n\t\t\tfieldValue = fieldValue?.getProperty(\"name\")?.join(\",\")\n\n\t\tif _.isArray(fieldValue)\n\t\t\tfieldValue = fieldValue?.join(\",\")\n\n\t\tif !fieldValue\n\t\t\tfieldValue = ''\n\n\t\tformData[key] = encodeURI(fieldValue)\n\n\tformData.attach = new Array()\n\n\tformData.originalAttach = new Array();\n\n\t#\t提交人信息\n\tuser_info = db.users.findOne({_id: instance.applicant})\n\n\tfileHandle = (f)->\n\t\ttry\n\t\t\tfilepath = path.join(absolutePath, f.copies.instances.key);\n\n\t\t\tif(fs.existsSync(filepath))\n\t\t\t\tformData.attach.push {\n\t\t\t\t\tvalue: fs.createReadStream(filepath),\n\t\t\t\t\toptions: {filename: f.name()}\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tlogger.error \"附件不存在：#{filepath}\"\n\t\tcatch e\n\t\t\tlogger.error \"附件下载失败：#{f._id},#{f.name()}. error: \" + e\n\n\n\t#\t正文附件\n\tmainFile = cfs.instances.find({\n\t\t'metadata.instance': instance._id,\n\t\t'metadata.current': true,\n\t\t\"metadata.main\": true\n\t}).fetch()\n\n\tmainFile.forEach fileHandle\n\n\t#\t非正文附件\n\tnonMainFile = cfs.instances.find({\n\t\t'metadata.instance': instance._id,\n\t\t'metadata.current': true,\n\t\t\"metadata.main\": {$ne: true}\n\t}).fetch()\n\n\tnonMainFile.forEach fileHandle\n\n\t#分发\n\tif instance.distribute_from_instance\n#\t正文附件\n\t\tmainFile = cfs.instances.find({\n\t\t\t'metadata.instance': instance.distribute_from_instance,\n\t\t\t'metadata.current': true,\n\t\t\t\"metadata.main\": true,\n\t\t\t\"metadata.is_private\": {\n\t\t\t\t$ne: true\n\t\t\t}\n\t\t}).fetch()\n\n\t\tmainFile.forEach fileHandle\n\n\t\t#\t非正文附件\n\t\tnonMainFile = cfs.instances.find({\n\t\t\t'metadata.instance': instance.distribute_from_instance,\n\t\t\t'metadata.current': true,\n\t\t\t\"metadata.main\": {$ne: true},\n\t\t\t\"metadata.is_private\": {\n\t\t\t\t$ne: true\n\t\t\t}\n\t\t}).fetch()\n\n\t\tnonMainFile.forEach fileHandle\n\n\t#\t原文\n\tform = db.forms.findOne({_id: instance.form})\n\tattachInfoName = \"F_#{form?.name}_#{instance._id}_1.html\";\n\n\tspace = db.spaces.findOne({_id: instance.space});\n\n\tuser = db.users.findOne({_id: space.owner})\n\n\toptions = {showTrace: true, showAttachments: true, absolute: true}\n\n\thtml = InstanceReadOnlyTemplate.getInstanceHtml(user, space, instance, options)\n\n\tdataBuf = new Buffer(html);\n\n\ttry\n\t\tformData.originalAttach.push {\n\t\t\tvalue: dataBuf,\n\t\t\toptions: {filename: attachInfoName}\n\t\t}\n\tcatch e\n\t\tlogger.error \"原文读取失败#{instance._id}. error: \" + e\n\n\tconsole.log(\"_minxiInstanceData end\", instance._id)\n\n\treturn formData;\n\n\nInstancesToContracts::sendContractInstances = (api, callback)->\n\tret = {count: 0, successCount: 0, instances: []}\n\n\tthat = @\n\n\tinstances = @getContractInstances()\n\n\tsuccessCount = 0\n\n\tconsole.log(\"InstancesToContracts.sendContractInstances\", instances.length)\n\n\tinstances.forEach (mini_ins)->\n\n\t\tinstance = db.instances.findOne({_id: mini_ins._id})\n\n\t\tif instance\n\t\t\turl = that.contracts_server + api + '?externalId=' + instance._id\n\n\t\t\tconsole.log(\"InstancesToContracts.sendContractInstances url\", url)\n\n\t\t\tsuccess = InstancesToContracts.sendContractInstance url, instance\n\n\t\t\tr = {\n\t\t\t\t_id: instance._id,\n\t\t\t\tname: instance.name,\n\t\t\t\tapplicant_name: instance.applicant_name,\n\t\t\t\tsubmit_date: instance.submit_date,\n\t\t\t\tis_contract_archived: true\n\t\t\t}\n\n\t\t\tif success\n\t\t\t\tsuccessCount++\n\t\t\telse\n\t\t\t\tr.is_contract_archived = false\n\n\t\t\tret.instances.push r\n\n\tret.count = instances.length\n\n\tret.successCount = successCount\n\n\treturn ret\n\n\n\nInstancesToContracts.sendContractInstance = (url, instance, callback) ->\n\tformData = {}\n\n\tformData.attach = new Array()\n\n\tflow = db.flows.findOne({_id: instance.flow});\n\n\tif flow\n\t\tformData.flowName = encodeURI(flow.name)\n\n\t_minxiInstanceData(formData, instance)\n\n\thttpResponse = steedosRequest.postFormDataAsync url, formData, callback\n\n\tif httpResponse.statusCode == 200\n\t\tInstancesToContracts.success instance\n\t\treturn true\n\telse\n\t\tInstancesToContracts.failed instance, httpResponse?.body\n\t\treturn false","var _fieldMap, _minxiInstanceData, absolutePath, logger, path, pathname, request;                      \n\nrequest = Npm.require('request');\n\npath = Npm.require('path');\n\npathname = path.join(__meteor_bootstrap__.serverDir, '../../../cfs/files/instances');\n\nabsolutePath = path.resolve(pathname);\n\nlogger = new Logger('Records_QHD -> InstancesToContracts');\n\n_fieldMap = \"{\\n\tprojectName: values[\\\"计划编号\\\"],\\n\tcontractType: values[\\\"合同类型\\\"],\\n\tchengBanDanWei: values[\\\"承办单位\\\"],\\n\tchengBanRen: values[\\\"承办人员\\\"],\\n\totherUnit: values[\\\"对方单位\\\"],\\n\tregisteredCapital: values[\\\"对方注册资金\\\"] * 10000,\\n\tcontractAmount: values[\\\"价款酬金\\\"],\\n\tsignedDate: values[\\\"签订日期\\\"],\\n\tstartDate: values[\\\"开始日期\\\"],\\n\toverDate: values[\\\"终止日期\\\"],\\n\tremarks: values[\\\"备注\\\"],\\n\tboP: values[\\\"收支类别\\\"],\\n\tisConnectedTransaction: values[\\\"是否关联交易\\\"],\\n\tcontractId: values[\\\"合同编号\\\"],\\n\tcontractName: values[\\\"合同名称\\\"]\\n}\";\n\nInstancesToContracts = function(spaces, contracts_server, contract_flows, submit_date_start, submit_date_end) {\n  this.spaces = spaces;\n  this.contracts_server = contracts_server;\n  this.contract_flows = contract_flows;\n  this.submit_date_start = submit_date_start;\n  this.submit_date_end = submit_date_end;\n};\n\nInstancesToContracts.success = function(instance) {\n  logger.info(\"success, name is \" + instance.name + \", id is \" + instance._id);\n  return db.instances.direct.update({\n    _id: instance._id\n  }, {\n    $set: {\n      is_contract_archived: true\n    }\n  });\n};\n\nInstancesToContracts.failed = function(instance, error) {\n  logger.error(\"failed, name is \" + instance.name + \", id is \" + instance._id + \". error: \");\n  return logger.error(error);\n};\n\nInstancesToContracts.prototype.getContractInstances = function() {\n  var query;\n  query = {\n    space: {\n      $in: this.spaces\n    },\n    flow: {\n      $in: this.contract_flows\n    },\n    is_deleted: false,\n    state: \"completed\",\n    \"values.币种\": \"人民币\"\n  };\n  if (this.submit_date_start && this.submit_date_end) {\n    query.submit_date = {\n      $gte: this.submit_date_start,\n      $lte: this.submit_date_end\n    };\n  } else {\n    query.is_contract_archived = {\n      $ne: true\n    };\n  }\n  return db.instances.find(query, {\n    fields: {\n      _id: 1\n    }\n  }).fetch();\n};\n\n_minxiInstanceData = function(formData, instance) {\n  var attachInfoName, dataBuf, e, fieldNames, field_values, fileHandle, form, format, fs, html, mainFile, nonMainFile, options, space, user, user_info;\n  console.log(\"_minxiInstanceData\", instance._id);\n  fs = Npm.require('fs');\n  if (!formData || !instance) {\n    return;\n  }\n  format = \"YYYY-MM-DD HH:mm:ss\";\n  formData.fileID = instance._id;\n  field_values = InstanceManager.handlerInstanceByFieldMap(instance, _fieldMap);\n  formData = _.extend(formData, field_values);\n  fieldNames = _.keys(formData);\n  fieldNames.forEach(function(key) {\n    var fieldValue, ref;\n    fieldValue = formData[key];\n    if (_.isDate(fieldValue)) {\n      fieldValue = moment(fieldValue).format(format);\n    }\n    if (_.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.name : void 0;\n    }\n    if (_.isArray(fieldValue) && fieldValue.length > 0 && _.isObject(fieldValue)) {\n      fieldValue = fieldValue != null ? (ref = fieldValue.getProperty(\"name\")) != null ? ref.join(\",\") : void 0 : void 0;\n    }\n    if (_.isArray(fieldValue)) {\n      fieldValue = fieldValue != null ? fieldValue.join(\",\") : void 0;\n    }\n    if (!fieldValue) {\n      fieldValue = '';\n    }\n    return formData[key] = encodeURI(fieldValue);\n  });\n  formData.attach = new Array();\n  formData.originalAttach = new Array();\n  user_info = db.users.findOne({\n    _id: instance.applicant\n  });\n  fileHandle = function(f) {\n    var e, filepath;\n    try {\n      filepath = path.join(absolutePath, f.copies.instances.key);\n      if (fs.existsSync(filepath)) {\n        return formData.attach.push({\n          value: fs.createReadStream(filepath),\n          options: {\n            filename: f.name()\n          }\n        });\n      } else {\n        return logger.error(\"附件不存在：\" + filepath);\n      }\n    } catch (error1) {\n      e = error1;\n      return logger.error((\"附件下载失败：\" + f._id + \",\" + (f.name()) + \". error: \") + e);\n    }\n  };\n  mainFile = cfs.instances.find({\n    'metadata.instance': instance._id,\n    'metadata.current': true,\n    \"metadata.main\": true\n  }).fetch();\n  mainFile.forEach(fileHandle);\n  nonMainFile = cfs.instances.find({\n    'metadata.instance': instance._id,\n    'metadata.current': true,\n    \"metadata.main\": {\n      $ne: true\n    }\n  }).fetch();\n  nonMainFile.forEach(fileHandle);\n  if (instance.distribute_from_instance) {\n    mainFile = cfs.instances.find({\n      'metadata.instance': instance.distribute_from_instance,\n      'metadata.current': true,\n      \"metadata.main\": true,\n      \"metadata.is_private\": {\n        $ne: true\n      }\n    }).fetch();\n    mainFile.forEach(fileHandle);\n    nonMainFile = cfs.instances.find({\n      'metadata.instance': instance.distribute_from_instance,\n      'metadata.current': true,\n      \"metadata.main\": {\n        $ne: true\n      },\n      \"metadata.is_private\": {\n        $ne: true\n      }\n    }).fetch();\n    nonMainFile.forEach(fileHandle);\n  }\n  form = db.forms.findOne({\n    _id: instance.form\n  });\n  attachInfoName = \"F_\" + (form != null ? form.name : void 0) + \"_\" + instance._id + \"_1.html\";\n  space = db.spaces.findOne({\n    _id: instance.space\n  });\n  user = db.users.findOne({\n    _id: space.owner\n  });\n  options = {\n    showTrace: true,\n    showAttachments: true,\n    absolute: true\n  };\n  html = InstanceReadOnlyTemplate.getInstanceHtml(user, space, instance, options);\n  dataBuf = new Buffer(html);\n  try {\n    formData.originalAttach.push({\n      value: dataBuf,\n      options: {\n        filename: attachInfoName\n      }\n    });\n  } catch (error1) {\n    e = error1;\n    logger.error((\"原文读取失败\" + instance._id + \". error: \") + e);\n  }\n  console.log(\"_minxiInstanceData end\", instance._id);\n  return formData;\n};\n\nInstancesToContracts.prototype.sendContractInstances = function(api, callback) {\n  var instances, ret, successCount, that;\n  ret = {\n    count: 0,\n    successCount: 0,\n    instances: []\n  };\n  that = this;\n  instances = this.getContractInstances();\n  successCount = 0;\n  console.log(\"InstancesToContracts.sendContractInstances\", instances.length);\n  instances.forEach(function(mini_ins) {\n    var instance, r, success, url;\n    instance = db.instances.findOne({\n      _id: mini_ins._id\n    });\n    if (instance) {\n      url = that.contracts_server + api + '?externalId=' + instance._id;\n      console.log(\"InstancesToContracts.sendContractInstances url\", url);\n      success = InstancesToContracts.sendContractInstance(url, instance);\n      r = {\n        _id: instance._id,\n        name: instance.name,\n        applicant_name: instance.applicant_name,\n        submit_date: instance.submit_date,\n        is_contract_archived: true\n      };\n      if (success) {\n        successCount++;\n      } else {\n        r.is_contract_archived = false;\n      }\n      return ret.instances.push(r);\n    }\n  });\n  ret.count = instances.length;\n  ret.successCount = successCount;\n  return ret;\n};\n\nInstancesToContracts.sendContractInstance = function(url, instance, callback) {\n  var flow, formData, httpResponse;\n  formData = {};\n  formData.attach = new Array();\n  flow = db.flows.findOne({\n    _id: instance.flow\n  });\n  if (flow) {\n    formData.flowName = encodeURI(flow.name);\n  }\n  _minxiInstanceData(formData, instance);\n  httpResponse = steedosRequest.postFormDataAsync(url, formData, callback);\n  if (httpResponse.statusCode === 200) {\n    InstancesToContracts.success(instance);\n    return true;\n  } else {\n    InstancesToContracts.failed(instance, httpResponse != null ? httpResponse.body : void 0);\n    return false;\n  }\n};\n","schedule = Npm.require('node-schedule')\n\nRecordsQHD = {}\n\n#\t*    *    *    *    *    *\n#\t┬    ┬    ┬    ┬    ┬    ┬\n#\t│    │    │    │    │    |\n#\t│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n#\t│    │    │    │    └───── month (1 - 12)\n#\t│    │    │    └────────── day of month (1 - 31)\n#\t│    │    └─────────────── hour (0 - 23)\n#\t│    └──────────────────── minute (0 - 59)\n#\t└───────────────────────── second (0 - 59, OPTIONAL)\n\nlogger = new Logger 'Records_QHD'\n\nRecordsQHD.settings_records_qhd = Meteor.settings.records_qhd\n\nRecordsQHD.test = () ->\n\tlogger.debug \"[#{new Date()}]run RecordsQHD.test\"\n\nRecordsQHD.scheduleJobMaps = {}\n\nRecordsQHD.run = ()->\n\ttry\n\t\tRecordsQHD.instanceToArchive();\n\tcatch  e\n\t\tconsole.error \"RecordsQHD.instanceToArchive\", e\n\n\ttry\n\t\tRecordsQHD.instanceToContracts();\n\tcatch  e\n\t\tconsole.error \"RecordsQHD.instanceToContracts\", e\n\nRecordsQHD.instanceToArchive = (ins_ids)->\n\n\tspaces = RecordsQHD.settings_records_qhd.spaces\n\n\tto_archive_sett = RecordsQHD.settings_records_qhd.to_archive\n\n\tarchive_server = to_archive_sett.archive_server\n\n\tflows = to_archive_sett?.contract_instances?.flows\n\n\tto_archive_api = to_archive_sett?.non_contract_instances?.to_archive_api\n\n\tcontract_archive_api = to_archive_sett?.contract_instances?.to_archive_api\n\n\tif !spaces\n\t\tlogger.error \"缺少settings配置: records-qhd.spaces\"\n\t\treturn\n\n\tif !archive_server\n\t\tlogger.error \"缺少settings配置: records-qhd.to_archive_sett.archive_server\"\n\t\treturn\n\n\tif !flows\n\t\tlogger.error \"缺少settings配置: records-qhd.to_archive_sett.contract_instances.flows\"\n\t\treturn\n\n\tif !contract_archive_api\n\t\tlogger.error \"缺少settings配置: records-qhd.to_archive_sett.contract_instances.contract_archive_api\"\n\t\treturn\n\n\tif !to_archive_api\n\t\tlogger.error \"缺少settings配置: records-qhd.to_archive_sett.non_contract_instances.to_archive_api\"\n\t\treturn\n\n\tinstancesToArchive = new InstancesToArchive(spaces, archive_server, flows, ins_ids)\n\n\tinstancesToArchive.sendContractInstances(contract_archive_api);\n\n\tinstancesToArchive.sendNonContractInstances(to_archive_api)\n\nRecordsQHD.instanceToContracts = (submit_date_start, submit_date_end, spaces)->\n\n\tconsole.time \"RecordsQHD.instanceToContracts\"\n\n\tif !RecordsQHD.settings_records_qhd\n\t\tconsole.log \"无效的setting配置\"\n\t\tthrow new Meteor.Error(500, \"无效的setting配置\");\n\n\n\tif !spaces\n\t\tspaces = RecordsQHD.settings_records_qhd.spaces\n\n\tto_contracts_sett = RecordsQHD.settings_records_qhd.to_contracts\n\n\tcontracts_server = to_contracts_sett?.contracts_server\n\n\tapi = to_contracts_sett?.api\n\n\tflows = to_contracts_sett?.flows\n\n\tif !spaces\n\t\tlogger.error \"缺少settings配置: records-qhd.spaces\"\n\t\treturn\n\n\tif !contracts_server\n\t\tlogger.error \"缺少settings配置: records-qhd.to_contracts_sett.contracts_server\"\n\t\treturn\n\n\tif !flows\n\t\tlogger.error \"缺少settings配置: records-qhd.contract_instances.flows\"\n\t\treturn\n\n\n\tinstancesToContracts = new InstancesToContracts(spaces, contracts_server, flows, submit_date_start, submit_date_end)\n\n\tret = instancesToContracts.sendContractInstances(api);\n\n\tconsole.timeEnd \"RecordsQHD.instanceToContracts\"\n\n\treturn ret;\n\nRecordsQHD.startScheduleJob = (name, recurrenceRule, fun) ->\n\n\tif !recurrenceRule\n\t\tlogger.error \"Miss recurrenceRule\"\n\t\treturn\n\tif !_.isString(recurrenceRule)\n\t\tlogger.error \"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\"\n\t\treturn\n\n\tif !fun\n\t\tlogger.error \"Miss function\"\n\telse if !_.isFunction(fun)\n\t\tlogger.error \"#{fun} is not function\"\n\telse\n\t\tlogger.info \"Add scheduleJobMaps: #{name}\"\n\t\tRecordsQHD.scheduleJobMaps[name] = schedule.scheduleJob recurrenceRule, fun\n\nif RecordsQHD.settings_records_qhd?.recurrenceRule\n\tRecordsQHD.startScheduleJob \"RecordsQHD.instanceToArchive\", RecordsQHD.settings_records_qhd?.recurrenceRule, Meteor.bindEnvironment(RecordsQHD.run)","var logger, ref, ref1, schedule;            \n\nschedule = Npm.require('node-schedule');\n\nRecordsQHD = {};\n\nlogger = new Logger('Records_QHD');\n\nRecordsQHD.settings_records_qhd = Meteor.settings.records_qhd;\n\nRecordsQHD.test = function() {\n  return logger.debug(\"[\" + (new Date()) + \"]run RecordsQHD.test\");\n};\n\nRecordsQHD.scheduleJobMaps = {};\n\nRecordsQHD.run = function() {\n  var e;\n  try {\n    RecordsQHD.instanceToArchive();\n  } catch (error) {\n    e = error;\n    console.error(\"RecordsQHD.instanceToArchive\", e);\n  }\n  try {\n    return RecordsQHD.instanceToContracts();\n  } catch (error) {\n    e = error;\n    return console.error(\"RecordsQHD.instanceToContracts\", e);\n  }\n};\n\nRecordsQHD.instanceToArchive = function(ins_ids) {\n  var archive_server, contract_archive_api, flows, instancesToArchive, ref, ref1, ref2, spaces, to_archive_api, to_archive_sett;\n  spaces = RecordsQHD.settings_records_qhd.spaces;\n  to_archive_sett = RecordsQHD.settings_records_qhd.to_archive;\n  archive_server = to_archive_sett.archive_server;\n  flows = to_archive_sett != null ? (ref = to_archive_sett.contract_instances) != null ? ref.flows : void 0 : void 0;\n  to_archive_api = to_archive_sett != null ? (ref1 = to_archive_sett.non_contract_instances) != null ? ref1.to_archive_api : void 0 : void 0;\n  contract_archive_api = to_archive_sett != null ? (ref2 = to_archive_sett.contract_instances) != null ? ref2.to_archive_api : void 0 : void 0;\n  if (!spaces) {\n    logger.error(\"缺少settings配置: records-qhd.spaces\");\n    return;\n  }\n  if (!archive_server) {\n    logger.error(\"缺少settings配置: records-qhd.to_archive_sett.archive_server\");\n    return;\n  }\n  if (!flows) {\n    logger.error(\"缺少settings配置: records-qhd.to_archive_sett.contract_instances.flows\");\n    return;\n  }\n  if (!contract_archive_api) {\n    logger.error(\"缺少settings配置: records-qhd.to_archive_sett.contract_instances.contract_archive_api\");\n    return;\n  }\n  if (!to_archive_api) {\n    logger.error(\"缺少settings配置: records-qhd.to_archive_sett.non_contract_instances.to_archive_api\");\n    return;\n  }\n  instancesToArchive = new InstancesToArchive(spaces, archive_server, flows, ins_ids);\n  instancesToArchive.sendContractInstances(contract_archive_api);\n  return instancesToArchive.sendNonContractInstances(to_archive_api);\n};\n\nRecordsQHD.instanceToContracts = function(submit_date_start, submit_date_end, spaces) {\n  var api, contracts_server, flows, instancesToContracts, ret, to_contracts_sett;\n  console.time(\"RecordsQHD.instanceToContracts\");\n  if (!RecordsQHD.settings_records_qhd) {\n    console.log(\"无效的setting配置\");\n    throw new Meteor.Error(500, \"无效的setting配置\");\n  }\n  if (!spaces) {\n    spaces = RecordsQHD.settings_records_qhd.spaces;\n  }\n  to_contracts_sett = RecordsQHD.settings_records_qhd.to_contracts;\n  contracts_server = to_contracts_sett != null ? to_contracts_sett.contracts_server : void 0;\n  api = to_contracts_sett != null ? to_contracts_sett.api : void 0;\n  flows = to_contracts_sett != null ? to_contracts_sett.flows : void 0;\n  if (!spaces) {\n    logger.error(\"缺少settings配置: records-qhd.spaces\");\n    return;\n  }\n  if (!contracts_server) {\n    logger.error(\"缺少settings配置: records-qhd.to_contracts_sett.contracts_server\");\n    return;\n  }\n  if (!flows) {\n    logger.error(\"缺少settings配置: records-qhd.contract_instances.flows\");\n    return;\n  }\n  instancesToContracts = new InstancesToContracts(spaces, contracts_server, flows, submit_date_start, submit_date_end);\n  ret = instancesToContracts.sendContractInstances(api);\n  console.timeEnd(\"RecordsQHD.instanceToContracts\");\n  return ret;\n};\n\nRecordsQHD.startScheduleJob = function(name, recurrenceRule, fun) {\n  if (!recurrenceRule) {\n    logger.error(\"Miss recurrenceRule\");\n    return;\n  }\n  if (!_.isString(recurrenceRule)) {\n    logger.error(\"RecurrenceRule is not String. https://github.com/node-schedule/node-schedule\");\n    return;\n  }\n  if (!fun) {\n    return logger.error(\"Miss function\");\n  } else if (!_.isFunction(fun)) {\n    return logger.error(fun + \" is not function\");\n  } else {\n    logger.info(\"Add scheduleJobMaps: \" + name);\n    return RecordsQHD.scheduleJobMaps[name] = schedule.scheduleJob(recurrenceRule, fun);\n  }\n};\n\nif ((ref = RecordsQHD.settings_records_qhd) != null ? ref.recurrenceRule : void 0) {\n  RecordsQHD.startScheduleJob(\"RecordsQHD.instanceToArchive\", (ref1 = RecordsQHD.settings_records_qhd) != null ? ref1.recurrenceRule : void 0, Meteor.bindEnvironment(RecordsQHD.run));\n}\n","Meteor.methods\n\trecords_qhd_sync_contracts: (spaceId, submit_date_start, submit_date_end)->\n\t\tif submit_date_start\n\t\t\tsubmit_date_start = new Date(submit_date_start)\n\n\t\tif submit_date_end\n\t\t\tsubmit_date_end = new Date(submit_date_end)\n\n\t\tif !spaceId\n\t\t\tthrow new Meteor.Error(\"Missing spaceId\")\n\n\t\tif Steedos.isSpaceAdmin(spaceId, this.userId)\n\t\t\ttry\n\t\t\t\tdata = RecordsQHD.instanceToContracts submit_date_start, submit_date_end, [spaceId]\n\t\t\t\treturn data\n\t\t\tcatch  e\n\t\t\t\tthrow new Meteor.Error(e.message)\n\t\telse\n\t\t\tthrow new Meteor.Error(\"No permission\")","Meteor.methods({\n  records_qhd_sync_contracts: function(spaceId, submit_date_start, submit_date_end) {\n    var data, e;\n    if (submit_date_start) {\n      submit_date_start = new Date(submit_date_start);\n    }\n    if (submit_date_end) {\n      submit_date_end = new Date(submit_date_end);\n    }\n    if (!spaceId) {\n      throw new Meteor.Error(\"Missing spaceId\");\n    }\n    if (Steedos.isSpaceAdmin(spaceId, this.userId)) {\n      try {\n        data = RecordsQHD.instanceToContracts(submit_date_start, submit_date_end, [spaceId]);\n        return data;\n      } catch (error) {\n        e = error;\n        throw new Meteor.Error(e.message);\n      }\n    } else {\n      throw new Meteor.Error(\"No permission\");\n    }\n  }\n});\n","Meteor.methods\n\trecords_qhd_sync_archive: (spaceId, ins_ids)->\n\n\t\tif !spaceId\n\t\t\tthrow new Meteor.Error(\"Missing spaceId\")\n\n\t\tins = db.instances.find({_id: {$in: ins_ids}}, {fields: {space: 1, is_deleted: 1, is_archived: 1, values: 1, state: 1, final_decision: 1, name: 1, applicant_name: 1, submit_date: 1}})\n\n\t\tins.forEach (i)->\n\t\t\tif i.is_deleted\n\t\t\t\tthrow new Meteor.Error(\"被删除的文件不能归档[#{i.name}(#{i._id})]\");\n\t\t\tif i.values?.record_need != \"true\"\n\t\t\t\tthrow new Meteor.Error(\"文件不需要归档[#{i.name}(#{i._id})]\");\n\t\t\tif i.state != 'completed'\n\t\t\t\tthrow new Meteor.Error(\"未结束的文件不能归档[#{i.name}(#{i._id})]\");\n#\t\t\tif i.final_decision && i.final_decision != 'approved'\n#\t\t\t\tthrow new Meteor.Error(\"未正常结束的文件不能归档[#{i.name}(#{i._id})]\");\n\n\t\tdb.instances.update({_id: {$in: ins_ids}}, {$set: {is_archived: false}}, {multi:true})\n\n\t\tif Steedos.isSpaceAdmin(spaceId, this.userId)\n\t\t\ttry\n\t\t\t\tRecordsQHD.instanceToArchive ins_ids\n\t\t\t\treturn ins.fetch()\n\t\t\tcatch  e\n\t\t\t\tthrow new Meteor.Error(e.message)\n\t\telse\n\t\t\tthrow new Meteor.Error(\"No permission\")","Meteor.methods({\n  records_qhd_sync_archive: function(spaceId, ins_ids) {\n    var e, ins;\n    if (!spaceId) {\n      throw new Meteor.Error(\"Missing spaceId\");\n    }\n    ins = db.instances.find({\n      _id: {\n        $in: ins_ids\n      }\n    }, {\n      fields: {\n        space: 1,\n        is_deleted: 1,\n        is_archived: 1,\n        values: 1,\n        state: 1,\n        final_decision: 1,\n        name: 1,\n        applicant_name: 1,\n        submit_date: 1\n      }\n    });\n    ins.forEach(function(i) {\n      var ref;\n      if (i.is_deleted) {\n        throw new Meteor.Error(\"被删除的文件不能归档[\" + i.name + \"(\" + i._id + \")]\");\n      }\n      if (((ref = i.values) != null ? ref.record_need : void 0) !== \"true\") {\n        throw new Meteor.Error(\"文件不需要归档[\" + i.name + \"(\" + i._id + \")]\");\n      }\n      if (i.state !== 'completed') {\n        throw new Meteor.Error(\"未结束的文件不能归档[\" + i.name + \"(\" + i._id + \")]\");\n      }\n    });\n    db.instances.update({\n      _id: {\n        $in: ins_ids\n      }\n    }, {\n      $set: {\n        is_archived: false\n      }\n    }, {\n      multi: true\n    });\n    if (Steedos.isSpaceAdmin(spaceId, this.userId)) {\n      try {\n        RecordsQHD.instanceToArchive(ins_ids);\n        return ins.fetch();\n      } catch (error) {\n        e = error;\n        throw new Meteor.Error(e.message);\n      }\n    } else {\n      throw new Meteor.Error(\"No permission\");\n    }\n  }\n});\n","Cookies = Npm.require(\"cookies\")\n\nJsonRoutes.add \"post\", \"/api/records/sync_contracts\", (req, res, next) ->\n\n\tuser = Steedos.getAPILoginUser(req, res)\n\n\tif !user\n\t\tJsonRoutes.sendResult res,\n\t\t\tcode: 401,\n\t\t\tdata:\n\t\t\t\t\"error\": \"Validate Request -- Missing X-Auth-Token,X-User-Id\",\n\t\t\t\t\"success\": false\n\t\treturn;\n\n\tspaceId = req.body?.spaceId\n\n\tif !spaceId\n\t\tJsonRoutes.sendResult res,\n\t\t\tcode: 401,\n\t\t\tdata:\n\t\t\t\t\"error\": \"Validate Request -- Missing spaceId\",\n\t\t\t\t\"success\": false\n\t\treturn;\n\n\n\tsubmit_date_start = req.body?.submit_date_start\n\n\tsubmit_date_end = req.body?.submit_date_end\n\n\tif submit_date_start\n\t\tsubmit_date_start = new Date(submit_date_start)\n\n\tif submit_date_end\n\t\tsubmit_date_end = new Date(submit_date_end)\n\n\n\tif Steedos.isSpaceAdmin(spaceId, user._id)\n\t\tconsole.log req.body\n\n\t\tdata = RecordsQHD.instanceToContracts submit_date_start, submit_date_end, [spaceId]\n\n\t\tJsonRoutes.sendResult res,\n\t\t\tcode: 200,\n\t\t\tdata:\n\t\t\t\t\"status\": \"success\",\n\t\t\t\t\"data\": data\n\n\telse\n\t\tJsonRoutes.sendResult res,\n\t\t\tcode: 401,\n\t\t\tdata:\n\t\t\t\t\"error\": \"Validate Request -- No permission\",\n\t\t\t\t\"success\": false\n\t\treturn;\n\treturn;\n","var Cookies;\n\nCookies = Npm.require(\"cookies\");\n\nJsonRoutes.add(\"post\", \"/api/records/sync_contracts\", function(req, res, next) {\n  var data, ref, ref1, ref2, spaceId, submit_date_end, submit_date_start, user;\n  user = Steedos.getAPILoginUser(req, res);\n  if (!user) {\n    JsonRoutes.sendResult(res, {\n      code: 401,\n      data: {\n        \"error\": \"Validate Request -- Missing X-Auth-Token,X-User-Id\",\n        \"success\": false\n      }\n    });\n    return;\n  }\n  spaceId = (ref = req.body) != null ? ref.spaceId : void 0;\n  if (!spaceId) {\n    JsonRoutes.sendResult(res, {\n      code: 401,\n      data: {\n        \"error\": \"Validate Request -- Missing spaceId\",\n        \"success\": false\n      }\n    });\n    return;\n  }\n  submit_date_start = (ref1 = req.body) != null ? ref1.submit_date_start : void 0;\n  submit_date_end = (ref2 = req.body) != null ? ref2.submit_date_end : void 0;\n  if (submit_date_start) {\n    submit_date_start = new Date(submit_date_start);\n  }\n  if (submit_date_end) {\n    submit_date_end = new Date(submit_date_end);\n  }\n  if (Steedos.isSpaceAdmin(spaceId, user._id)) {\n    console.log(req.body);\n    data = RecordsQHD.instanceToContracts(submit_date_start, submit_date_end, [spaceId]);\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: {\n        \"status\": \"success\",\n        \"data\": data\n      }\n    });\n  } else {\n    JsonRoutes.sendResult(res, {\n      code: 401,\n      data: {\n        \"error\": \"Validate Request -- No permission\",\n        \"success\": false\n      }\n    });\n    return;\n  }\n});\n"]}